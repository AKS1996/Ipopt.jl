using BinaryProvider

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libmetis"], :libmetis),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaBinaryWrappers/METIS_jll.jl/releases/download/METIS-v5.1.0+3"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/METIS.v5.1.0.aarch64-linux-gnu.tar.gz", "2ba1cdee9f53ef5db1802dda61a4c8cf118e90bf102a0740e06cc33006b6285e"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/METIS.v5.1.0.aarch64-linux-musl.tar.gz", "3b256a816609742498f082afd131b29ec9996d804b2d34a241a2dba57459718e"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/METIS.v5.1.0.armv7l-linux-gnueabihf.tar.gz", "1fcdbbd9f390537cd8c80459181ea0f1330f4a9aab2ae199a221e2e9b05fe32f"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/METIS.v5.1.0.armv7l-linux-musleabihf.tar.gz", "b795608b3de115d7385634b4f5cdf57a624a6e6efd90e8bbfcdcf08a9fa30341"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/METIS.v5.1.0.i686-linux-gnu.tar.gz", "b04e2c1e87275ab9e809a311017f5c0691eafa0e8a31b4cef8513e13ce2ecf3e"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/METIS.v5.1.0.i686-linux-musl.tar.gz", "d761812e467d064312dac660f1ba11d9ccf286f4423b2efe7612ecc702191b41"),
    Windows(:i686) => ("$bin_prefix/METIS.v5.1.0.i686-w64-mingw32.tar.gz", "67106f883642120928e3ebebb8273d706cc66ed76cc7c3446b7f4d0475be2837"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/METIS.v5.1.0.powerpc64le-linux-gnu.tar.gz", "9814a76b4260278439d0f1eb60484be53fa004dff7482a5ce82b48c6b4f3f892"),
    MacOS(:x86_64) => ("$bin_prefix/METIS.v5.1.0.x86_64-apple-darwin14.tar.gz", "267bfe76d1c5c818ee57e798701d54deb2a2fe58d4c5f8b55f3af5448661e0a2"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/METIS.v5.1.0.x86_64-linux-gnu.tar.gz", "2c807c477a0fa35878e6f44a7cb93349e19bc892ecc0b2a58d922202a7b7be9c"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/METIS.v5.1.0.x86_64-linux-musl.tar.gz", "0a29094a9a612f75053e856a4bd400945e1c62970a9f5b07bfa8114690158b48"),
    FreeBSD(:x86_64) => ("$bin_prefix/METIS.v5.1.0.x86_64-unknown-freebsd11.1.tar.gz", "41cba6e9112717f96895d56396adb17874c4d19d9c549b36567a52f7993f2846"),
    Windows(:x86_64) => ("$bin_prefix/METIS.v5.1.0.x86_64-w64-mingw32.tar.gz", "196b135905387eb2f90a570272f7ee5ed4526bd13bf16322fb0418aeed615d89"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end
